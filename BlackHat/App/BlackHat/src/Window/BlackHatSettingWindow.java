/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Window;

import Configration.Configrations;
import Database.Conf;
import blackhat.Tooles;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import com.jidesoft.swing.CheckBoxList;

/**
 *
 * @author abaza
 */
public class BlackHatSettingWindow extends javax.swing.JInternalFrame {

    private int Mode;
    private MainGUI MainClass = null;

    /**
     * Creates new form jFSetting
     *
     * @param MainClass
     */
    public BlackHatSettingWindow(MainGUI MainClass) {
        try {
            initComponents();
            this.MainClass = MainClass;
            LoadInformation();
            Tooles Image = new Tooles();
            Image.ShowImage("img/setting_bar.png", jLabel1, 648, 95);
            jTabbedPane1.setTitleAt(0, blackhat.BlackHat.local.getString("tabSettingBasic"));
            jTabbedPane1.setTitleAt(1, blackhat.BlackHat.local.getString("tabLoginSetting"));
            jTabbedPane1.setTitleAt(2, blackhat.BlackHat.local.getString("tabDownloadSetting"));
            jTabbedPane1.setTitleAt(3, blackhat.BlackHat.local.getString("tabMotion"));
            jTabbedPane1.setTitleAt(4, blackhat.BlackHat.local.getString("tabPlugins"));
            jTabbedPane1.setTitleAt(5, blackhat.BlackHat.local.getString("tabCase"));

            jLabel21.setText(blackhat.BlackHat.Args.get("WEBCAM_MODEL"));
            Standerd_Load();
        } catch (SQLException ex) {
            Logger.getLogger(BlackHatSettingWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSpinner3 = new javax.swing.JSpinner();
        jSlider1 = new javax.swing.JSlider();
        jLabel10 = new javax.swing.JLabel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        ip1 = new javax.swing.JFormattedTextField();
        ip2 = new javax.swing.JFormattedTextField();
        ip3 = new javax.swing.JFormattedTextField();
        ip4 = new javax.swing.JFormattedTextField();
        ip5 = new javax.swing.JFormattedTextField();
        ip6 = new javax.swing.JFormattedTextField();
        ip7 = new javax.swing.JFormattedTextField();
        ip8 = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox7 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jSpinner4 = new javax.swing.JSpinner();
        jPanel10 = new javax.swing.JPanel();
        jCheckBox6 = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jSpinner6 = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        jSpinner7 = new javax.swing.JSpinner();
        jLabel25 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel26 = new javax.swing.JLabel();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jCheckBox8 = new javax.swing.JCheckBox();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setBackground(new java.awt.Color(1, 1, 1));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/setting_bar.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, Short.MAX_VALUE)
        );

        jButton1.setText(blackhat.BlackHat.local.getString("btnOK"));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText(blackhat.BlackHat.local.getString("btnCancel"));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Ubuntu", 0, 8)); // NOI18N
        jLabel23.setText("UUID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1))
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        jTabbedPane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseMoved(evt);
            }
        });

        jPanel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel4MouseMoved(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Worning.png"))); // NOI18N
        jLabel2.setText(blackhat.BlackHat.local.getString("lblNote"));

        jLabel3.setText(blackhat.BlackHat.local.getString("lblServerIP"));

        jLabel4.setText(blackhat.BlackHat.local.getString("lblURLInternet"));

        jLabel5.setText(blackhat.BlackHat.local.getString("lblServerPort"));

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(3369, 1, 65535, 1));

        jLabel6.setText(blackhat.BlackHat.local.getString("lblServerInternetPort"));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(80, 1, 65535, 1));

        jLabel8.setText(blackhat.BlackHat.local.getString("lblServerIP"));

        jLabel9.setText(blackhat.BlackHat.local.getString("lblServerPort"));

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(1, 1, 65535, 1));

        jSlider1.setValue(0);

        jLabel10.setText(blackhat.BlackHat.local.getString("lblSoundRecordQuality"));

        jFormattedTextField2.setText("http://");

        try {
            ip1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ip1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip1.setMaximumSize(new java.awt.Dimension(3, 3));
        ip1.setMinimumSize(new java.awt.Dimension(1, 1));
        ip1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ip1MouseMoved(evt);
            }
        });

        try {
            ip2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ip2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip2.setMaximumSize(new java.awt.Dimension(3, 3));
        ip2.setMinimumSize(new java.awt.Dimension(1, 1));
        ip2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ip2MouseMoved(evt);
            }
        });

        try {
            ip3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ip3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip3.setMaximumSize(new java.awt.Dimension(3, 3));
        ip3.setMinimumSize(new java.awt.Dimension(1, 1));
        ip3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ip3MouseMoved(evt);
            }
        });

        try {
            ip4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ip4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip4.setMaximumSize(new java.awt.Dimension(3, 3));
        ip4.setMinimumSize(new java.awt.Dimension(1, 1));
        ip4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                ip4MouseMoved(evt);
            }
        });

        ip5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        ip5.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ip6.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        ip6.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ip7.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        ip7.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        ip8.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###"))));
        ip8.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel11.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText(blackhat.BlackHat.local.getString("lblVersionInternet"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(ip1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(ip2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(ip3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(ip4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(ip5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(ip6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(ip7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(ip8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))))))
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ip1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(5, 5, 5)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ip5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ip1, ip2, ip3, ip4, jSpinner1});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {ip5, ip6, ip7, ip8, jSpinner3});

        jTabbedPane1.addTab("Basic", jPanel4);

        jPanel5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel5MouseMoved(evt);
            }
        });

        jCheckBox2.setText(blackhat.BlackHat.local.getString("chkShowLogin"));
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel12.setText(blackhat.BlackHat.local.getString("lblusername"));

        jLabel13.setText(blackhat.BlackHat.local.getString("lblPassword"));

        jLabel14.setText(blackhat.BlackHat.local.getString("lblrepassword"));

        jLabel15.setText(blackhat.BlackHat.local.getString("lblPhoneNumber"));

        jCheckBox1.setText(blackhat.BlackHat.local.getString("chkSMS"));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPasswordField1.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jPasswordField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPasswordField2.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jPasswordField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPasswordField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField2KeyReleased(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jCheckBox7.setText(blackhat.BlackHat.local.getString("chkTackPhotoIfPasswordTry"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(26, 26, 26)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField1)
                                .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                                .addComponent(jPasswordField2)
                                .addComponent(jTextField2))))
                    .addComponent(jCheckBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox7)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jCheckBox2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jCheckBox2)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Login", jPanel5);

        jPanel6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel6MouseMoved(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(blackhat.BlackHat.local.getString("frmEncriptData")));

        jCheckBox3.setText(blackhat.BlackHat.local.getString("chEncriptionOff"));
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jLabel16.setText(blackhat.BlackHat.local.getString("lblPassword"));

        jPasswordField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(blackhat.BlackHat.local.getString("frmPathandConfigration")));

        jLabel17.setText(blackhat.BlackHat.local.getString("lblDownloadFilein"));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText(blackhat.BlackHat.local.getString("opNameByDateandPCName"));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText(blackhat.BlackHat.local.getString("opNameonlyByPCName"));

        jButton3.setText(blackhat.BlackHat.local.getString("btnBrowser"));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton2)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(blackhat.BlackHat.local.getString("frmActionforDelete")));

        jCheckBox4.setText(blackhat.BlackHat.local.getString("chkDeleteafterCopytoUSB"));

        jCheckBox5.setText(blackhat.BlackHat.local.getString("chkDeleteinEveryDayInMonth"));

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 30, 1));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox4)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jCheckBox5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jCheckBox4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Download Dir", jPanel6);

        jPanel10.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel10MouseMoved(evt);
            }
        });

        jCheckBox6.setText(blackhat.BlackHat.local.getString("chkRunMotionSensor"));
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(blackhat.BlackHat.local.getString("frmActionIfMotionStop")));

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText(blackhat.BlackHat.local.getString("opCloseBlackHat"));

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText(blackhat.BlackHat.local.getString("opLogoutfromBlackHat"));

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setText(blackhat.BlackHat.local.getString("optRefrechConnection"));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jRadioButton3)
                .addGap(72, 72, 72)
                .addComponent(jRadioButton4)
                .addGap(94, 94, 94)
                .addComponent(jRadioButton5)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton5))
                .addContainerGap())
        );

        jLabel18.setText(blackhat.BlackHat.local.getString("lblActionStartAfter"));

        jLabel19.setText(blackhat.BlackHat.local.getString("lblsec"));

        jLabel20.setText(blackhat.BlackHat.local.getString("lblWebcamModel"));

        jLabel21.setText("..");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19))
                    .addComponent(jCheckBox6)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSpinner5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(141, 141, 141))
        );

        jTabbedPane1.addTab("tab4", jPanel10);

        jPanel12.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel12MouseMoved(evt);
            }
        });

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("What it is Do ?"));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 342, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab5", jPanel12);

        jPanel13.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel13MouseMoved(evt);
            }
        });

        jLabel7.setText("I Will Open Blackhat Every ");

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));
        jSpinner6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner6StateChanged(evt);
            }
        });

        jLabel24.setText("Day\\s , But if i not open BlackHat after ");

        jSpinner7.setModel(new javax.swing.SpinnerNumberModel(3, null, null, 1));

        jLabel25.setText("Days");

        jLabel22.setText("Or after this Date ");

        jDateChooser1.setDateFormatString("yyyy/MM/dd");

        jLabel26.setText("Do that ....");

        buttonGroup3.add(jRadioButton6);
        jRadioButton6.setText("Delete Every thing in all computers and admin computer and distroy all data related with BlackHat");

        buttonGroup3.add(jRadioButton7);
        jRadioButton7.setText("Change Password and Delete all informations about me and about my Emplawy");

        buttonGroup3.add(jRadioButton8);
        jRadioButton8.setText("Delete Adminstartion BlackHat but keep Emplay");

        buttonGroup3.add(jRadioButton9);
        jRadioButton9.setText("System destroyed and make it invalid in order to be re-installation of a new system");

        buttonGroup3.add(jRadioButton10);
        jRadioButton10.setText("Nothing");

        jCheckBox8.setText("Run Time Action");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel24)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSpinner7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel25))
                        .addGroup(jPanel13Layout.createSequentialGroup()
                            .addComponent(jLabel22)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jRadioButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jRadioButton10)
                    .addComponent(jCheckBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jCheckBox8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jSpinner7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel26))
                .addGap(30, 30, 30)
                .addComponent(jRadioButton6)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton7)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton8)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton9)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton10)
                .addContainerGap())
        );

        jTabbedPane1.addTab("tab6", jPanel13);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        switch (Mode) {
            case 1:
                Save_Local_Configration();
                break;
            case 2:
                break;
            case 3:
                break;
        }
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinner6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner6StateChanged
        int Value = Integer.parseInt(jSpinner6.getModel().getValue().toString());
        SpinnerModel SP = new SpinnerNumberModel(Value + 2, Value + 1, 32, 1);
        jSpinner7.setModel(SP);
    }//GEN-LAST:event_jSpinner6StateChanged

    private void ip1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip1MouseMoved
        ip1.select(0, 3);
    }//GEN-LAST:event_ip1MouseMoved

    private void ip2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip2MouseMoved
        ip2.select(0, 3);
    }//GEN-LAST:event_ip2MouseMoved

    private void ip3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip3MouseMoved
        ip3.select(0, 3);
    }//GEN-LAST:event_ip3MouseMoved

    private void ip4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ip4MouseMoved
        ip4.select(0, 3);
    }//GEN-LAST:event_ip4MouseMoved

    private void jPasswordField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyReleased
        if (jPasswordField2.getText().equals(jPasswordField1.getText())) {
            jPasswordField1.setBackground(Color.GREEN);
            jPasswordField1.setForeground(Color.black);
            jPasswordField2.setBackground(Color.GREEN);
            jPasswordField2.setForeground(Color.black);
        } else {
            jPasswordField1.setBackground(Color.WHITE);
            jPasswordField1.setForeground(Color.green);
            jPasswordField2.setBackground(Color.RED);
            jPasswordField2.setForeground(Color.black);
        }
    }//GEN-LAST:event_jPasswordField2KeyReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()) {
            jTextField2.setText("+( )(   )");
            jTextField2.setEnabled(true);
        } else {
            jTextField2.setText("+( )(   )");
            jTextField2.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle(blackhat.BlackHat.local.getString("titelSelectDirectory"));
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //    
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            jTextField4.setText(chooser.getSelectedFile().toPath().toString());
//            System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
//            System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
        } else {
            jTextField4.setText("");
//            System.out.println("No Selection ");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()) {
            jPasswordField3.setEnabled(true);
        } else {
            jPasswordField3.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        boolean Key;
        Key = jCheckBox2.isSelected();
        PanelLogin(Key);
    }//GEN-LAST:event_jCheckBox2ActionPerformed
    private void PanelLogin(boolean Key) {
        jTextField1.setEnabled(Key);
        jPasswordField1.setEnabled(Key);
        jPasswordField2.setEnabled(Key);
        jTextField2.setEnabled(Key);
        jCheckBox1.setEnabled(Key);
        jCheckBox7.setEnabled(Key);
    }
    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        boolean Key;
        Key = jCheckBox6.isSelected();
        PanelMotion(Key);
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jTabbedPane1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseMoved
        this.MainClass.doAction();
    }//GEN-LAST:event_jTabbedPane1MouseMoved

    private void jPanel4MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseMoved
        this.MainClass.doAction();
    }//GEN-LAST:event_jPanel4MouseMoved

    private void jPanel5MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseMoved
        this.MainClass.doAction();
    }//GEN-LAST:event_jPanel5MouseMoved

    private void jPanel6MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseMoved
        this.MainClass.doAction();
    }//GEN-LAST:event_jPanel6MouseMoved

    private void jPanel10MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseMoved
        this.MainClass.doAction();
    }//GEN-LAST:event_jPanel10MouseMoved

    private void jPanel12MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel12MouseMoved
        this.MainClass.doAction();
    }//GEN-LAST:event_jPanel12MouseMoved

    private void jPanel13MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel13MouseMoved
        this.MainClass.doAction();
    }//GEN-LAST:event_jPanel13MouseMoved
    private void PanelMotion(boolean Key) {
        jRadioButton3.setEnabled(Key);
        jRadioButton4.setEnabled(Key);
        jRadioButton5.setEnabled(Key);
        jSpinner5.setEnabled(Key);
    }

    private void LoadInformation() {
        switch (blackhat.BlackHat.Args.get("TYPE_NETWORK")) {
            case "NETWORK":
                Mode = 1;
                jLabel3.setVisible(true);
                jLabel5.setVisible(true);
                ip1.setVisible(true);
                ip2.setVisible(true);
                ip3.setVisible(true);
                ip4.setVisible(true);
                jSpinner1.setVisible(true);
                jLabel4.setVisible(false);
                jLabel6.setVisible(false);
                jFormattedTextField2.setVisible(false);
                jSpinner2.setVisible(false);
                jLabel11.setText(blackhat.BlackHat.local.getString("lblVersionNetwork"));
                Load_Local_Configration();
                break;
            case "INTERNET":
                Mode = 2;
                jLabel3.setVisible(false);
                jLabel5.setVisible(false);
                ip1.setVisible(false);
                ip2.setVisible(false);
                ip3.setVisible(false);
                ip4.setVisible(false);
                jSpinner1.setVisible(false);
                jLabel4.setVisible(true);
                jLabel6.setVisible(true);
                jFormattedTextField2.setVisible(true);
                jSpinner2.setVisible(true);
                jLabel11.setText(blackhat.BlackHat.local.getString("lblVersionInternet"));
                Load_Internet_Configration();
                break;
            case "BOTH":
                Mode = 3;
                jLabel3.setVisible(true);
                jLabel5.setVisible(true);
                ip1.setVisible(true);
                ip2.setVisible(true);
                ip3.setVisible(true);
                ip4.setVisible(true);
                jSpinner1.setVisible(true);
                jLabel4.setVisible(true);
                jLabel6.setVisible(true);
                jFormattedTextField2.setVisible(true);
                jSpinner2.setVisible(true);
                jLabel11.setText(blackhat.BlackHat.local.getString("lblVersionNetworkandInternet"));
                Load_Local_Configration();
                Load_Internet_Configration();
                break;
        }
    }

    private void Load_Local_Configration() {
        if (blackhat.BlackHat.Args.containsKey("SERVER_IP")) {
            String IP = blackhat.BlackHat.Args.get("SERVER_IP").replace(".", ":");
            String[] ipaddress = IP.split(":");
            ip1.setText(ipaddress[0]);
            ip2.setText(ipaddress[1]);
            ip3.setText(ipaddress[2]);
            ip4.setText(ipaddress[3]);
        }
        jSpinner1.setValue(Integer.parseInt(blackhat.BlackHat.Args.get("SERVER_PORT")));
    }

    private void Load_Internet_Configration() {
        if (blackhat.BlackHat.Args.containsKey("SERVER_URL")) {
            jFormattedTextField2.setText(blackhat.BlackHat.Args.get("SERVER_URL"));
        } else {
            jFormattedTextField2.setText("http://");
        }
        if (blackhat.BlackHat.Args.containsKey("SERVER_URL_PORT")) {
            jSpinner2.setValue(Integer.parseInt(blackhat.BlackHat.Args.get("SERVER_PORT")));
        } else {
            jSpinner2.setValue(80);
        }
    }

    private boolean Save_Local_Configration() {
        this.MainClass.doAction();
        if (blackhat.BlackHat.ConfigrationBlackHat != null) {
            HashMap<String, String> SettingData = new HashMap();
            int[] IP = new int[4];
            String IPS1 = ip1.getText().replace(" ", "");
            String IPS2 = ip2.getText().replace(" ", "");
            String IPS3 = ip3.getText().replace(" ", "");
            String IPS4 = ip4.getText().replace(" ", "");

            IP[0] = Integer.parseInt(IPS1);
            IP[1] = Integer.parseInt(IPS2);
            IP[2] = Integer.parseInt(IPS3);
            IP[3] = Integer.parseInt(IPS4);

            String IP_Address = "";
            for (int IP1 : IP) {
                if (IP1 > 255) {
                    JOptionPane.showMessageDialog(this, IP1 + " " + blackhat.BlackHat.local.getString("msgNotLogic"), blackhat.BlackHat.local.getString("lblErrorLabelMessage"), JOptionPane.OK_OPTION + JOptionPane.ERROR_MESSAGE);
                    return false;
                } else {
                    IP_Address += IP1 + ".";
                }
            }
            IP_Address = IP_Address.substring(0, IP_Address.length() - 1).trim();
            int Port_Server = Integer.parseInt(jSpinner1.getModel().getValue().toString());

            SettingData.put("SERVER_IP", IP_Address);
            SettingData.put("SERVER_PORT", String.valueOf(Port_Server));

            //Audio
            if (blackhat.BlackHat.Args.containsKey("AUDIO_IP")) {
                int[] AIP = new int[4];
                String AIPS1 = ip5.getText().replace(" ", "");
                String AIPS2 = ip6.getText().replace(" ", "");
                String AIPS3 = ip7.getText().replace(" ", "");
                String AIPS4 = ip8.getText().replace(" ", "");

                AIP[0] = Integer.parseInt(AIPS1);
                AIP[1] = Integer.parseInt(AIPS2);
                AIP[2] = Integer.parseInt(AIPS3);
                AIP[3] = Integer.parseInt(AIPS4);

                String AUDOO_IP_Address = "";
                for (int IP1 : AIP) {
                    if (IP1 > 255) {
                        JOptionPane.showMessageDialog(this, IP1 + " " + blackhat.BlackHat.local.getString("msgNotLogic"), blackhat.BlackHat.local.getString("lblErrorLabelMessage"), JOptionPane.OK_OPTION + JOptionPane.ERROR_MESSAGE);
                        return false;
                    } else {
                        AUDOO_IP_Address += IP1 + ".";
                    }
                }
                AUDOO_IP_Address = AUDOO_IP_Address.substring(0, AUDOO_IP_Address.length() - 1).trim();
                int AUDIO_PORT = Integer.parseInt(jSpinner3.getModel().getValue().toString());
                int AUDIO_VOILUM = jSlider1.getModel().getValue();

                SettingData.put("AUDIO_IP", AUDOO_IP_Address);
                SettingData.put("AUDIO_PORT", String.valueOf(AUDIO_PORT));
                SettingData.put("AUDIO_VOLUM", String.valueOf(AUDIO_VOILUM));
            }

            if (jCheckBox2.isSelected()) {
                if (jPasswordField1.getText().equals(jPasswordField2.getText())) {
                    SettingData.put("SHOW_LOGIN", "1");
                    SettingData.put("DEFAULT_LOGIN", jTextField1.getText().trim());
                    SettingData.put("DEFAULT_PASSWORD", jPasswordField1.getText().trim());
                } else {
                    JOptionPane.showMessageDialog(this, blackhat.BlackHat.local.getString("msgPasswordNotEqual"), blackhat.BlackHat.local.getString("lblErrorLabelMessage"), JOptionPane.ERROR_MESSAGE);
                    jTabbedPane1.setSelectedIndex(1);
                    return false;
                }
                if (jCheckBox1.isSelected()) {
                    SettingData.put("FUN_SEND_SMS", "1");
                    SettingData.put("USER_PHONE_NUMBER", jTextField2.getText().trim());
                } else {
                    SettingData.put("FUN_SEND_SMS", "0");
                    SettingData.put("USER_PHONE_NUMBER", "");
                }

                SettingData.put("FUN_TACK_PHOTO_IN_LOGIN", (jCheckBox7.isSelected() ? "1" : "0"));
            } else {
                SettingData.put("SHOW_LOGIN", "0");
                PanelLogin(false);
            }

            SettingData.put("RUN_MOTION", (jCheckBox6.isSelected() ? "1" : "0"));

            try {
                Conf Con = Conf.queryFirstRow(blackhat.BlackHat.ConnectDB, "");
                if (Con != null) {
                    Con.deleteAllFromDB(blackhat.BlackHat.ConnectDB);
                    Con = new Conf();
                } else {
                    Con = new Conf();
                }

                if (jCheckBox3.isEnabled()) {
                    Con.doSetOpencloseencript((jCheckBox3.isSelected() ? "1" : "0"));
                }

                if (jPasswordField3.isEnabled()) {
                    Con.doSetEncpass((jPasswordField3.getText().isEmpty() ? null : jPasswordField3.getText()));
                }

                if (jTextField4.isEnabled()) {
                    if (jTextField4.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, blackhat.BlackHat.local.getString("msgPleaseSelecteDownloadPath"), blackhat.BlackHat.local.getString("lblErrorLabelMessage"), JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                    Con.doSetDownload_dir((jTextField4.getText().isEmpty() ? null : jTextField4.getText()));
                }

                if (jRadioButton1.isSelected()) {
                    Con.doSetDownloadname(0);
                } else if (jRadioButton2.isSelected()) {
                    Con.doSetDownloadname(1);
                }

                if (jCheckBox4.isSelected()) {
                    Con.doSetDelaftercopyinusb(1);
                } else {
                    Con.doSetDelaftercopyinusb(0);
                }

                if (jSpinner4.isEnabled()) {
                    Con.doSetDelinthisday((jSpinner4.getModel().getValue().equals("0") ? 0 : jSpinner4.getModel().getValue()));
                }

                if ((jRadioButton3.isEnabled()) && (jRadioButton4.isEnabled()) && (jRadioButton5.isEnabled())) {
                    if (jRadioButton3.isSelected()) {
                        Con.doSetAction_whin_motion_stop(0);
                    } else if (jRadioButton4.isSelected()) {
                        Con.doSetAction_whin_motion_stop(1);
                    } else if (jRadioButton5.isSelected()) {
                        Con.doSetAction_whin_motion_stop(2);
                    }
                }
                if (jSpinner5.isEnabled()) {
                    Con.doSetStart_action_after_delay((jSpinner5.getModel().getValue().equals("0") ? 0 : jSpinner5.getModel().getValue()));
                }

                if (jCheckBox8.isEnabled()) {
                    if (jCheckBox8.isSelected()) {
                        Con.doSetIfidaid(1);
                        Con.doSetOpen_every(jSpinner6.getModel().getValue());
                        Con.doSetTime_not_open(jSpinner7.getModel().getValue());
                        Con.doSetDate_for_action(jDateChooser1.getDate());

                        if (jRadioButton6.isSelected()) {
                            Con.doSetAction_for_action(0);
                        } else if (jRadioButton7.isSelected()) {
                            Con.doSetAction_for_action(1);
                        } else if (jRadioButton8.isSelected()) {
                            Con.doSetAction_for_action(2);
                        } else if (jRadioButton9.isSelected()) {
                            Con.doSetAction_for_action(3);
                        } else if (jRadioButton10.isSelected()) {
                            Con.doSetAction_for_action(4);
                        }
                    } else {
                        Con.doSetIfidaid(0);
                        Con.doSetTime_not_open(0);
                        Con.doSetOpen_every(0);
                    }
                } else {
                    Con.doSetIfidaid(0);
                    Con.doSetTime_not_open(0);
                    Con.doSetOpen_every(0);
                }

                if (blackhat.BlackHat.ConfigrationBlackHat == null) {
                    blackhat.BlackHat.ConfigrationBlackHat = new Configrations();
                }
                if (blackhat.BlackHat.ConfigrationBlackHat.InsertNew(SettingData, blackhat.BlackHat.ConfigrationFile, blackhat.BlackHat.PasswordServer, true)) {
                    blackhat.BlackHat.Args = new HashMap<>();
                    blackhat.BlackHat.Args = blackhat.BlackHat.ConfigrationBlackHat.Configr(blackhat.BlackHat.ConfigrationFile, blackhat.BlackHat.PasswordServer);
//                    this.MainClass.StartMotion();

                    Con.insertIntoDB(blackhat.BlackHat.ConnectDB);
                    return true;
                } else {
                    JOptionPane.showMessageDialog(this, "Internel Error 0001", "Internel Error", JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            } catch (SQLException ex) {
                return false;
            }
        } else {
            return false;
        }

    }

    private void Standerd_Load() throws SQLException {
        jLabel23.setText(blackhat.BlackHat.Args.get("UUID"));
        if (blackhat.BlackHat.Args.containsKey("AUDIO_IP")) {
            if (blackhat.BlackHat.Args.containsKey("AUDIO_IP")) {
                String IP = blackhat.BlackHat.Args.get("AUDIO_IP").replace(".", ":");
                String[] ipaddress = IP.split(":");
                ip5.setText(ipaddress[0]);
                ip6.setText(ipaddress[1]);
                ip7.setText(ipaddress[2]);
                ip8.setText(ipaddress[3]);
            }
            if (blackhat.BlackHat.Args.containsKey("AUDIO_PORT")) {
                jSpinner3.setValue(Integer.parseInt(blackhat.BlackHat.Args.get("AUDIO_PORT")));
            }

            if (blackhat.BlackHat.Args.containsKey("AUDIO_VOLUM")) {
                jSlider1.setValue(Integer.parseInt(blackhat.BlackHat.Args.get("AUDIO_VOLUM")));
            }
        } else {
            ip5.setEnabled(false);
            ip6.setEnabled(false);
            ip7.setEnabled(false);
            ip8.setEnabled(false);
            jSpinner3.setEnabled(false);
            jSlider1.setEnabled(false);
        }

        if (blackhat.BlackHat.Args.containsKey("SHOW_LOGIN")) {
            PanelLogin(true);
            int Look = Integer.parseInt((blackhat.BlackHat.Args.get("SHOW_LOGIN")));
            if (Look == 1) {
                jCheckBox2.setSelected(true);
                jTextField1.setText(blackhat.BlackHat.Args.get("DEFAULT_LOGIN"));
                jPasswordField1.setText(blackhat.BlackHat.Args.get("DEFAULT_PASSWORD"));
                if (blackhat.BlackHat.Args.containsKey("FUN_SEND_SMS")) {
                    if ((Integer.parseInt(blackhat.BlackHat.Args.get("FUN_SEND_SMS"))) == 1) {
                        jCheckBox1.setSelected(true);
                        jTextField2.setText(blackhat.BlackHat.Args.get("USER_PHONE_NUMBER"));
                        jTextField2.setEnabled(true);
                    } else {
                        jCheckBox1.setSelected(false);
                        jTextField2.setText("+( )(   )");
                        jTextField2.setEnabled(false);
                    }
                } else {
                    jCheckBox1.setSelected(false);
                    jTextField2.setText("+( )(   )");
                    jTextField2.setEnabled(false);
                }
                if (blackhat.BlackHat.Args.containsKey("FUN_TACK_PHOTO_IN_LOGIN")) {
                    if ((Integer.parseInt(blackhat.BlackHat.Args.get("FUN_TACK_PHOTO_IN_LOGIN"))) == 1) {
                        jCheckBox7.setSelected(true);
                    } else {
                        jCheckBox7.setSelected(false);
                    }
                } else {
                    jCheckBox7.setSelected(false);
                }
                jPanel3.updateUI();
            }
        } else {
            PanelLogin(false);
        }

        if (blackhat.BlackHat.Args.containsKey("RUN_MOTION")) {

            if ((Integer.parseInt(blackhat.BlackHat.Args.get("RUN_MOTION"))) == 1) {
                PanelMotion(true);
                jCheckBox6.setSelected(true);
            } else {
                PanelMotion(false);
                jCheckBox6.setSelected(false);
            }
        } else {
            PanelMotion(false);
            jCheckBox6.setSelected(false);
        }

        jPanel10.updateUI();

//        checkBoxList1.removeAll();
//        checkBoxList1.setModel(new javax.swing.AbstractListModel() {
//            @Override
//            public int getSize() {
//                return MainGUI.KeysName.length;
//            }
//
//            @Override
//            public Object getElementAt(int i) {
//                return MainGUI.KeysName[i];
//            }
//
//        });
//        int Count = MainGUI.KeysName.length;
//        for (int i = 0; i <= Count - 1; i++) {
//            if (blackhat.BlackHat.Args.containsKey(MainGUI.KeysName[i])) {
//                int Key = Integer.parseInt(blackhat.BlackHat.Args.get(MainGUI.KeysName[i]));
//                if (Key == 1) {
//                    checkBoxList1.setCheckBoxListSelectedValue(MainGUI.KeysName[i], true);
//                } else if (Key == 0) {
//                    checkBoxList1.setCheckBoxListSelectedValue(MainGUI.KeysName[i], false);
//                }
//            }
//
//        }
//        checkBoxList1.updateUI();
        Conf ConfigrationDB = Conf.queryFirstRow(blackhat.BlackHat.ConnectDB, "");
        if (ConfigrationDB != null) {
            if (ConfigrationDB.getOpencloseencript().equals("1")) {
                jCheckBox3.setSelected(true);
                jPasswordField3.setEnabled(true);
                jPasswordField3.setText(ConfigrationDB.getEncpass().toString());
            } else {
                jCheckBox3.setSelected(false);
                jPasswordField3.setEnabled(false);
                jPasswordField3.setText("");
            }
            //Download
            jTextField4.setText((ConfigrationDB.getDownload_dir() == null) ? "" : ConfigrationDB.getDownload_dir().toString());
            int OptionName = Integer.parseInt((ConfigrationDB.getDownloadname() == null) ? "0" : ConfigrationDB.getDownloadname().toString());
            switch (OptionName) {
                case 0:
                    jRadioButton1.setSelected(true);
                    break;
                case 1:
                    jRadioButton2.setSelected(true);
                    break;
            }

            //Deleteing
            if (ConfigrationDB.getDelaftercopyinusb().toString().equals("1")) {
                jCheckBox4.setSelected(true);
            } else {
                jCheckBox4.setSelected(false);
            }

            jSpinner4.getModel().setValue(Integer.parseInt(ConfigrationDB.getDelinthisday().toString()));

            int MotionAction = Integer.parseInt((ConfigrationDB.getAction_whin_motion_stop() == null) ? "-1" : ConfigrationDB.getAction_whin_motion_stop().toString());
            switch (MotionAction) {
                case 0:
                    jRadioButton3.setSelected(true);
                    break;
                case 1:
                    jRadioButton4.setSelected(true);
                    break;
                case 2:
                    jRadioButton5.setSelected(true);
                    break;
                default:
                    jRadioButton3.setSelected(false);
                    jRadioButton3.setSelected(false);
                    jRadioButton3.setSelected(false);
                    break;
            }

            jSpinner5.setValue((ConfigrationDB.getStart_action_after_delay() == null) ? 0 : ConfigrationDB.getStart_action_after_delay());

            if ((Integer.parseInt(ConfigrationDB.getIfidaid().toString())) == 1) {
                jCheckBox8.setSelected(true);
            } else {
                jCheckBox8.setSelected(false);
            }

            jSpinner5.setValue((ConfigrationDB.getStart_action_after_delay() == null ? 1 : ConfigrationDB.getStart_action_after_delay()));
            jSpinner6.setValue((ConfigrationDB.getOpen_every() == null ? 3 : ConfigrationDB.getOpen_every()));
            jSpinner7.setValue((ConfigrationDB.getTime_not_open() == null ? 3 : ConfigrationDB.getTime_not_open()));

            String DBDate = ((ConfigrationDB.getDate_for_action() == null ? null : ConfigrationDB.getDate_for_action().toString()));
            if (DBDate != null) {
                Date DbD = new Date(Long.parseLong(DBDate));
                jDateChooser1.setDate(DbD);
            } else {
                DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                Calendar cal = Calendar.getInstance();
                jDateChooser1.setCalendar(cal);
                //dateFormat.format(cal.getTime())
            }

            int ChoseAction = Integer.parseInt((ConfigrationDB.getAction_for_action() == null ? "4" : ConfigrationDB.getAction_for_action().toString()));
            switch (ChoseAction) {
                case 0:
                    jRadioButton6.setSelected(true);
                    break;
                case 1:
                    jRadioButton7.setSelected(true);
                    break;
                case 2:
                    jRadioButton8.setSelected(true);
                    break;
                case 3:
                    jRadioButton9.setSelected(true);
                    break;
                case 4:
                    jRadioButton10.setSelected(true);
                    break;
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JFormattedTextField ip1;
    private javax.swing.JFormattedTextField ip2;
    private javax.swing.JFormattedTextField ip3;
    private javax.swing.JFormattedTextField ip4;
    private javax.swing.JFormattedTextField ip5;
    private javax.swing.JFormattedTextField ip6;
    private javax.swing.JFormattedTextField ip7;
    private javax.swing.JFormattedTextField ip8;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JSpinner jSpinner7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

}
