/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BlackHatSwitchButton;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author abaza
 */
public class BlackHat_PC_Units extends JPanel implements MouseListener {

    Image Computer1 = null;
    Image Computer2 = null;
    Image Button1 = null;
    Image Button2 = null;
    String title = null, ip_address = null, mac_address = null;
    private Vector listeners = null;
    boolean hit = false;

    public BlackHat_PC_Units() {
        super();
        initComponents();
        try {
            listeners = new Vector();
            Button1 = new ImageIcon(ImageIO.read(getClass().getResource("/img/on.png"))).getImage();
            Button2 = new ImageIcon(ImageIO.read(getClass().getResource("/img/off.png"))).getImage();
            Computer1 = new ImageIcon(ImageIO.read(getClass().getResource("/img/pc_On.png"))).getImage();
            Computer2 = new ImageIcon(ImageIO.read(getClass().getResource("/img/pc_Off.png"))).getImage();
            addMouseListener(this);
        } catch (IOException ex) {
        }
    }

    public void setPC_Name(String Name) {
        this.title = Name;
        pc_label.setText(this.title);
    }

    public void setIP_Address(String IP_ADDRESS) {
        this.ip_address = IP_ADDRESS;
        lblIPAddress.setText("IP Address : " + this.ip_address);
    }

    public void setMAC_Address(String MAC_ADDRESS) {
        this.mac_address = MAC_ADDRESS;
        lblMAC.setText("MAC Address :" + this.mac_address);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pc_label = new javax.swing.JLabel();
        lblIPAddress = new javax.swing.JLabel();
        lblMAC = new javax.swing.JLabel();

        setBackground(new java.awt.Color(1, 1, 1));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pc_Off.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/off.png"))); // NOI18N
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        pc_label.setBackground(new java.awt.Color(0, 0, 0));
        pc_label.setForeground(new java.awt.Color(255, 0, 0));
        pc_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pc_label.setText("PC-Name");
        pc_label.setToolTipText("");
        pc_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblIPAddress.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblIPAddress.setForeground(new java.awt.Color(8, 177, 9));
        lblIPAddress.setText("IP Address :");

        lblMAC.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblMAC.setForeground(new java.awt.Color(8, 177, 9));
        lblMAC.setText("MAC Address :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pc_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIPAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMAC, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pc_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblIPAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblMAC)))
                .addGap(0, 0, 0)
                .addComponent(jLabel2))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        Redesien();
    }//GEN-LAST:event_formAncestorResized

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        Redesien();
    }//GEN-LAST:event_formComponentResized

    private void Redesien() {
        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pc_Off.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/off.png"))); // NOI18N
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        pc_label.setBackground(new java.awt.Color(0, 0, 0));
        pc_label.setForeground(new java.awt.Color(255, 0, 0));
        pc_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pc_label.setText(this.title);
        pc_label.setToolTipText(this.title);
        pc_label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblIPAddress.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblIPAddress.setForeground(new java.awt.Color(8, 177, 9));
        lblIPAddress.setText("IP Address : " + this.ip_address);

        lblMAC.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblMAC.setForeground(new java.awt.Color(8, 177, 9));
        lblMAC.setText("MAC Address :" + this.mac_address);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pc_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblIPAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblMAC, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE))))
                        .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(pc_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblIPAddress)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblMAC)))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel2))
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblIPAddress;
    private javax.swing.JLabel lblMAC;
    private javax.swing.JLabel pc_label;
    // End of variables declaration//GEN-END:variables

//    @Override
//    public Dimension getPreferredSize() {
//        if (Button1 != null) {
//            return new Dimension(Button1.getWidth(this), Button1.getHeight(this));
//        } else {
//            return new Dimension(120, 80);
//        }
//    }
    @Override
    public void paintComponent(Graphics g) {
        if (hit) {
            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pc_On.png"))); // NOI18N
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/on.png"))); // NOI18N
            pc_label.setText(this.title);
            lblIPAddress.setText("IP Address : " + this.ip_address);
            lblMAC.setText("MAC Address :" + this.mac_address);
        } else {
            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pc_Off.png"))); // NOI18N
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/off.png"))); // NOI18N
            pc_label.setText(this.title);
            lblIPAddress.setText("IP Address : " + this.ip_address);
            lblMAC.setText("MAC Address :" + this.mac_address);
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        if (hit) {
            hit = false;
            repaint();
        } else {
            hit = true;
            repaint();
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        fireEvent(new ActionEvent(this, 0, title));
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    public void addActionListener(ActionListener listener) {
        listeners.addElement(listener);
    }

    public void removeActionListener(ActionListener listener) {
        listeners.removeElement(listener);
    }

    private void fireEvent(ActionEvent event) {
        for (int i = 0; i < listeners.size(); i++) {
            ActionListener listener = (ActionListener) listeners.elementAt(i);
            listener.actionPerformed(event);
        }
    }

    public boolean isRun() {
        return hit;
    }

    public String UnitName() {
        return this.title;
    }

    public String getIP_Address() {
        return this.ip_address;
    }

    public String getMacAddress() {
        return this.mac_address;
    }
}
